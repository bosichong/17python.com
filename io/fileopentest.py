#codeing=utf-8
# @Time    : 2017-09-04
# @Author  : J.sky
# @Mail    : bosichong@qq.com
# @Site    : www.17python.com
# @Title   : Python open()函数文件打开、读、写操作总结
# @Url     : http://www.17python.com/blog/13
# @Details : Python open()函数文件打开、读、写操作总结
# @Other   : OS X 10.11.6 
#            Python 3.6.1
#            VSCode 1.15.1
import os
###################################
# 为什么是with open()?
###################################

#一般的文件打开方法：
f = open(os.path.join(os.path.dirname(__file__),'17python.txt'))
s = f.readline();# 一次读取一行内容
print(s)
f.close() #关闭流，如果是写入文件，不关闭流，可能会造成写入失败或是内容丢失。

# 更多详细内容可以参考下边的文档
# io - 使用流的核心工具 python 中文文档中
#http://python.usyiyi.cn/documents/python_352/library/io.html

###################################
# 使用with open() as f
###################################

with open(os.path.join(os.path.dirname(__file__),'17python.txt')) as f :
    s = f.readline()
    print(s)

# with open的好处是，不用再使用close()方法，避免因忘记close()方法产生的错误。

# open方法中的常用参数,open函数有很多的参数，常用的是file，mode和encoding
# name就不解释了，文件名字符串，encoding='utf-8'，用来指定打开或写入文件的编码。
# open(name[,mode[,buffering]])
# 其中mode 指定文件打开方式,
# 读写模式的类型有：
# rU 或 Ua 以读方式打开, 同时提供通用换行符支持 (PEP 278)
# w     以写方式打开，
# a     以追加模式打开 (从 EOF 开始, 必要时创建新文件)
# r+     以读写模式打开
# w+     以读写模式打开 (参见 w )
# a+     以读写模式打开 (参见 a )
# rb     以二进制读模式打开
# wb     以二进制写模式打开 (参见 w )
# ab     以二进制追加模式打开 (参见 a )
# rb+    以二进制读写模式打开 (参见 r+ )
# wb+    以二进制读写模式打开 (参见 w+ )
# ab+    以二进制读写模式打开 (参见 a+ )

# 读取及写入文件
# read()方法用来读取文件
# write()方法用来写入文件

#关于读取大文件内容丢失

#数据保存 一般保存没有什么大问题，主要是读取。 如果保存后是字符串,之前是list 或是 元组（Tuples）保存后就是字符串了，
# 再读取就需要转换成对应的容器，这里用eval(s)函数方法，效果还是比较不错的。 
# 还有就是大文本在读取的时候如果一次用python read()全部读取的时候会出现莫明的无反应及读取内容不全的情况 ，这里采用分段读取比较好些：

with open(os.path.join(os.path.dirname(__file__),'17python.txt'), mode='r',encoding='utf-8') as f:
    s = ''
    while True:  
        temp = f.read(100)#分段读取，可以解决读取大文件时无法读取的奇怪问题
        if temp == '':  
            break
        s += temp
    print(s)

